version: '2.4'

x-app: &app
  build:
    context: .
    dockerfile: ./Dockerfile
    args:
      RUBY_VERSION: '2.7.1'
      BUNDLER_VERSION: '2.1.4'
      # PG_MAJOR: '12' # FIXME: commented for now while we are not using any database
  environment: &env
    NODE_ENV: development
    RAILS_ENV: ${RAILS_ENV:-development}
  image: cheap_machines-manager-dev:1.0.0
  tmpfs:
    - /tmp

x-backend: &backend
  <<: *app
  stdin_open: true
  tty: true
  volumes:
    - ..:/app:cached
    - rails_cache:/app/tmp/cache
    - bundle:/usr/local/bundle
    - .bashrc:/root/.bashrc:ro
    # - .psqlrc:/root/.psqlrc:ro # FIXME: commented for now while we are not using any database
  environment:
    <<: *env
    # DATABASE_URL: postgres://postgres:postgres@postgres:5432 # FIXME: commented for now while we are not using any database
    # PSQL_HISTFILE: /app/log/.psql_history # FIXME: commented for now while we are not using any database
    BOOTSNAP_CACHE_DIR: /usr/local/bundle/_bootsnap
    WEB_CONCURRENCY: 1
    HISTFILE: /app/log/.bash_history
    EDITOR: vi
  # FIXME: commented for now while we are not using any database
  # depends_on:
  #   postgres:
  #     condition: service_healthy

services:
  runner:
    <<: *backend
    command: /bin/bash
    ports:
      - '3000:3000'

  rails:
    <<: *backend
    command: bundle exec rails server -b 0.0.0.0
    ports:
      - '3000:3000'

  # FIXME: commented for now while we are not using any database
  # postgres:
  #   image: postgres:12.3
  #   volumes:
  #     - .psqlrc:/root/.psqlrc:ro
  #     - postgres:/var/lib/postgresql/data
  #     - ./log:/root/log:cached
  #   environment:
  #     PSQL_HISTFILE: /root/log/.psql_history
  #     POSTGRES_HOST_AUTH_METHOD: trust
  #   ports:
  #     - 5432
  #   healthcheck:
  #     test: pg_isready -U postgres -h 127.0.0.1
  #     interval: 5s

volumes:
  # postgres: # FIXME: commented for now while we are not using any database
  bundle:
  rails_cache:
